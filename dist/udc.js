define("member",[],function(){var e={};return function(n,r,i){var u=e[n]||(e[n]={}),o=u[r]||(u[r]={});return o[i]||(o[i]=Object.freeze({dimension:n,codeList:r,code:i,key:r+"|"+i}))}}),define("cell",[],function(){function e(e,n){return e.dimension>n.dimension?1:-1}function n(e){return Object.freeze({members:e,key:e.map(function(e){return e.key}).join("~")})}var r={};return function(i){var u=i.sort(e).reduce(function(e,n){var r=e[n.dimension]||(e[n.dimension]={}),i=r[n.codeList]||(r[n.codeList]={});return i[n.code]||(i[n.code]={})},r);return u.cell||(u.cell=n(i))}}),define("cube",["_","member","cell"],function(e,n,r){function i(e,i,u){var o={cell:r(i.map(function(r){var i=r.dimension,u=r.codeList,o=e[r.column];return n(i,u,o)})),values:{}};return u.forEach(function(n){o.values[n.measure]=e[n.column]*n.scale}),o}return function(n){var r=n.dimensionColumns,u=n.measureColumns,o=n.rows.map(function(e){return i(e,r,u)});return{dimensions:e.pluck(r,"dimension"),measures:e.pluck(u,"measure"),observations:o}}}),define("cubeIndex",[],function(){return function(e){var n={};return e.forEach(function(e){n[e.cell.key]=e.values}),{values:function(e){return n[e.key]}}}}),define("Member",[],function(){var e={};return function(n,r,i){var u=e[n]||(e[n]={}),o=u[r]||(u[r]={});return o[i]||(o[i]=Object.freeze({dimension:n,codeList:r,code:i,key:r+"|"+i}))}}),define("Cell",[],function(){function e(e,n){return e.dimension>n.dimension?1:-1}function n(e){return Object.freeze({members:e,key:e.map(function(e){return e.key}).join("~")})}var r={};return function(i){var u=i.sort(e).reduce(function(e,n){var r=e[n.dimension]||(e[n.dimension]={}),i=r[n.codeList]||(r[n.codeList]={});return i[n.code]||(i[n.code]={})},r);return u.cell||(u.cell=n(i))}}),define("thesaurus",["Member","Cell"],function(e,n){return function(r){function i(e,n){return s[e.dimension][e.codeList][e.code][n]}function u(e){var n=s[e.dimension][e.codeList];if(n.hasOwnProperty(e.code)){var r=a[e.dimension][0];return n[e.code][r]}return e}function o(e){return n(e.members.map(u))}function c(e){return{cell:o(e.cell),values:e.values}}function t(e){return{dimensions:e.dimensions,measures:e.measures,observations:e.observations.map(c)}}var s={},a={};return r.forEach(function(n){n.rows.forEach(function(r){var i={};n.dimensionColumns.forEach(function(n){var u=n.dimension,o=n.codeList,c=r[n.column],t=e(u,o,c),a=s[u]||(s[u]={}),m=a[o]||(a[o]={});i[o]=t,m[c]=i})})}),Object.keys(s).forEach(function(e){a[e]=Object.keys(s[e]).sort()}),{translate:i,canonicalizeMember:u,canonicalizeCube:t}}}),define("hierarchy",["member"],function(e){return function(n){function r(e,n){var i=n(e);return e.children&&(i.children=e.children.map(function(e){return r(e,n)})),i}var i=n.dimension,u=n.codeList;return{dimension:i,tree:r(n,function(n){return{member:e(i,u,n.code)}})}}}),define("mergeHierarchies",[],function(){return function(e,n,r){function i(e){var n=r.canonicalizeMember(e.member),o=u(n);return e.children&&(o.children=o.children||[],o.children=o.children.concat(e.children.map(i)),e.children.forEach(function(e){t[e.member.key]=!0})),o}function u(e){return c[e.key]||(c[e.key]={member:e})}function o(e){return t[e.member.key]}var c={},t={},s=i(n.tree),a=i(e.tree);return{dimension:e.dimension,tree:o(a)?s:a}}}),define("mergeCubes",["_","cubeIndex","Cell","Member"],function(e,n){function r(r,i){var u=e.intersection(r.dimensions,i.dimensions),o=e.union(r.measures,i.measures),c=n(r.observations),t=n(i.observations),s=e.pluck(r.observations,"cell");return observations=s.map(function(n){var r=c.values(n),i=t.values(n);return{cell:n,values:e.extend(r,i)}}),{dimensions:u,measures:o,observations:observations}}return function(e,n,i){var u=i.canonicalizeCube(e),o=i.canonicalizeCube(n);return r(u,o)}}),define("udc",["member","cell","cube","cubeIndex","thesaurus","hierarchy","mergeHierarchies","mergeCubes"],function(e,n,r,i,u,o,c,t){return{Member:e,Cell:n,Cube:r,CubeIndex:i,Thesaurus:u,Hierarchy:o,mergeHierarchies:c,mergeCubes:t}});